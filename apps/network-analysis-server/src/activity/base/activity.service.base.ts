/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Activity as PrismaActivity } from "@prisma/client";

export class ActivityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ActivityCountArgs, "select">): Promise<number> {
    return this.prisma.activity.count(args);
  }

  async activities<T extends Prisma.ActivityFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ActivityFindManyArgs>
  ): Promise<PrismaActivity[]> {
    return this.prisma.activity.findMany<Prisma.ActivityFindManyArgs>(args);
  }
  async activity<T extends Prisma.ActivityFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ActivityFindUniqueArgs>
  ): Promise<PrismaActivity | null> {
    return this.prisma.activity.findUnique(args);
  }
  async createActivity<T extends Prisma.ActivityCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ActivityCreateArgs>
  ): Promise<PrismaActivity> {
    return this.prisma.activity.create<T>(args);
  }
  async updateActivity<T extends Prisma.ActivityUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ActivityUpdateArgs>
  ): Promise<PrismaActivity> {
    return this.prisma.activity.update<T>(args);
  }
  async deleteActivity<T extends Prisma.ActivityDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ActivityDeleteArgs>
  ): Promise<PrismaActivity> {
    return this.prisma.activity.delete(args);
  }
}
